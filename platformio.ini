;   Source code based on https://github.com/esphome/esphome/tree/dev/esphome/components/improv_serial

;   (c) 2018-2025 alf45star
;   https://github.com/alf45tar/PedalinoMini

;   This file is part of PedalinoMini.

;   You should have received a copy of the GNU General Public License
;   along with PedalinoMini. If not, see <http://www.gnu.org/licenses/>.

;   Modifications by Fuegovic, 2025.
;                                                                 https://github.com/alf45tar/PedalinoMini

[platformio]
default_envs  =	esp32doit-devkit-v1
workspace_dir = ${sysenv.TMPDIR}/PedalinoMini

[common]
lib_deps	=
 	bxparks/AceButton@1.10.1												;	https://github.com/bxparks/AceButton
	bblanchon/ArduinoJson@7.3.1												;	https://github.com/bblanchon/ArduinoJson
	fastled/FastLED@3.7.4													;	https://github.com/FastLED/FastLED
	d03n3rfr1tz3/HC-SR04@1.1.2												;	https://github.com/d03n3rfr1tz3/HC-SR04
	majicdesigns/MD_REncoder@1.0.1											;	https://github.com/MajicDesigns/MD_REncoder
	https://github.com/CNMAT/OSC@3.5.8										;	https://github.com/CNMAT/OSC
	dxinteractive/ResponsiveAnalogRead@1.2.1								;	https://github.com/dxinteractive/ResponsiveAnalogRead
	ryokosaka/Hello Drum@0.7.7												;	https://github.com/RyoKosaka/HelloDrum-arduino-Library
	adafruit/Adafruit ADS1X15@2.5.0											;	https://github.com/adafruit/Adafruit_ADS1X15
	thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@4.6.1		;	https://github.com/ThingPulse/esp8266-oled-ssd1306
	; bodmer/TFT_eSPI@2.5.43												;	https://github.com/Bodmer/TFT_eSPI
	; mathieucarbou/AsyncTCP@^3.3.2
	; mathieucarbou/ESPAsyncWebServer@^3.6.0
	fortyseveneffects/MIDI Library@5.0.2									;	https://github.com/FortySevenEffects/arduino_midi_library
 	h2zero/NimBLE-Arduino@1.4.3												;	https://github.com/h2zero/NimBLE-Arduino
	esphome/Improv@1.2.3													;	https://github.com/improv-wifi/sdk-cpp
	esphome/ESPAsyncWebServer-esphome@3.3.0									;	https://github.com/esphome/ESPAsyncWebServer
	esphome/AsyncTCP-esphome@2.1.4											;	https://github.com/esphome/AsyncTCP
	lathoub/AppleMIDI@3.3.0													;	https://github.com/lathoub/Arduino-AppleMIDI-Library
	lathoub/BLE-MIDI@2.2													;	https://github.com/lathoub/Arduino-BLE-MIDI
 	lathoub/ipMIDI@1.0.3													;	https://github.com/lathoub/Arduino-ipMIDI

build_flags	=
	-D PEDALINO_MINI
	-D PLATFORMIO_ENV=$PIOENV
	-D DEBUG_ESP_PORT=Serial
;	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_WARN
	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
;	-D CONFIG_ASYNC_TCP_RUNNING_CORE=0
;	-D CONFIG_ASYNC_TCP_USE_WDT=0
	-D DIAGNOSTIC
	-D NVS
	-D SMARTCONFIG
	-D WPS
;	-D WEBSOCKET
;	-D NOWEBCONFIG
;	-D BLECLIENT
;	-D BLUFI
;	-D ARDUINOOTA
	-Wno-unused-variable

build_flags_esp32 =
	-D SSD1306WIRE
	-D ESP32_PLATFORM_VERSION=\"${vars.esp32_platform_version}\"
build_flags_esp32-ble =
	-D NOWIFI
	-D SSD1306WIRE

build_flags_esp32-wifi =
	-D NOBLE
	-D SSD1306WIRE

[vars]
esp32_platform_version = 3.5.0 ; 4.4.0 can run but takes more memory

[env]
platform 				= espressif32@${vars.esp32_platform_version}
framework				= arduino
board					= esp32dev
board_build.f_flash		= 80000000L
board_build.partitions	= src/partitions_no_ota.csv
build_type				= release		;	release, test, debug
lib_deps				= ${common.lib_deps}
monitor_speed			= 115200
monitor_filters			= esp32_exception_decoder, default

[env:esp32dev]
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}
				
[env:esp32doit-devkit-v1]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}

[env:esp32doit-devkit-v1-ble]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32-ble}
lib_deps	= 	${common.lib_deps}
board_build.partitions = src/partitions_ota.csv

[env:esp32doit-devkit-v1-wifi]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32-wifi}
lib_deps	= 	${common.lib_deps}
board_build.partitions = src/partitions_ota.csv

[env:esp-wrover-kit]
board 		= 	esp-wrover-kit
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}